[gd_scene load_steps=13 format=3 uid="uid://bt4uyk54cpqqj"]

[ext_resource type="Texture2D" uid="uid://dh16vcrcyd1u2" path="res://art/visual/kloofendal_48d_partly_cloudy_puresky_4k.exr" id="1_lul1m"]
[ext_resource type="PackedScene" uid="uid://ey3dv6gmxvdv" path="res://art/visual/pine_tree_-_ps1_low_poly.glb" id="2_nge2g"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_h3lm0"]
transparency = 1
albedo_color = Color(1, 1, 1, 0)

[sub_resource type="GDScript" id="GDScript_7thbr"]
script/source = "extends CSGCombiner3D
# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta: float) -> void:
	pass
"

[sub_resource type="PanoramaSkyMaterial" id="PanoramaSkyMaterial_rtfbo"]
panorama = ExtResource("1_lul1m")

[sub_resource type="Sky" id="Sky_xxil6"]
sky_material = SubResource("PanoramaSkyMaterial_rtfbo")

[sub_resource type="Environment" id="Environment_4c7uv"]
background_mode = 2
sky = SubResource("Sky_xxil6")
sky_rotation = Vector3(0, -3.20093, 0)
tonemap_mode = 2
glow_enabled = true

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_s0gjd"]
render_priority = 1
albedo_color = Color(0.46297, 0.727103, 0.378589, 1)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_3rwbt"]
albedo_color = Color(0.462539, 0.674198, 0.644021, 1)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_v6u3t"]
albedo_color = Color(0.601553, 0.419032, 0.642774, 1)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_psspe"]
albedo_color = Color(0.678456, 0.526561, 0.233814, 1)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_n3g2r"]
albedo_color = Color(1, 1, 1, 0)

[node name="Test Level" type="CSGCombiner3D" groups=["deathbox"]]
material_override = SubResource("StandardMaterial3D_h3lm0")
use_collision = true
script = SubResource("GDScript_7thbr")

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_4c7uv")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(-0.866023, -0.433016, 0.250001, 0, 0.499998, 0.866027, -0.500003, 0.749999, -0.43301, 0, 0, 0)
shadow_enabled = true

[node name="Node3D" type="Node3D" parent="."]

[node name="CSGBox3D" type="CSGBox3D" parent="Node3D"]
transform = Transform3D(10, 0, 0, 0, 1, 0, 0, 0, 10, 0, -0.5, 0)
material_override = SubResource("StandardMaterial3D_s0gjd")
use_collision = true
size = Vector3(7.28564, 1, 7.73828)

[node name="Node3D2" type="Node3D" parent="."]

[node name="CSGBox3D3" type="CSGBox3D" parent="Node3D2"]
transform = Transform3D(2, 0, 0, 0, 2, 0, 0, 0, 2, 12.1352, 0.816147, 10.7812)
material_override = SubResource("StandardMaterial3D_3rwbt")
use_collision = true
size = Vector3(3.47168, 1.11778, 3.59778)

[node name="Node3D3" type="Node3D" parent="."]

[node name="CSGBox3D4" type="CSGBox3D" parent="Node3D3"]
transform = Transform3D(2, 0, 0, 0, 2, 0, 0, 0, 2, 15.4462, 6.06305, 20.2988)
material_override = SubResource("StandardMaterial3D_v6u3t")
use_collision = true
size = Vector3(1.4082, 6.36469, 1.56717)

[node name="Node3D4" type="Node3D" parent="."]

[node name="CSGBox3D5" type="CSGBox3D" parent="Node3D4"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 9.2226, 0.459394, 20.1612)
material_override = SubResource("StandardMaterial3D_psspe")
use_collision = true
size = Vector3(6.31653, 1.35718, 5.06738)

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="."]

[node name="Tree" parent="." instance=ExtResource("2_nge2g")]
transform = Transform3D(0.9, 0, 0, 0, 0.9, 0, 0, 0, 0.9, 26.1855, 0, -26.1045)

[node name="Tree2" parent="." instance=ExtResource("2_nge2g")]
transform = Transform3D(0.4351, 0, -1.01029, 0, 1.1, 0, 1.01029, 0, 0.4351, -2.4453, 1.90735e-06, -29.1279)

[node name="CSGBox3D" type="CSGBox3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -20, 0)
size = Vector3(150, 1, 150)
material = SubResource("StandardMaterial3D_n3g2r")
